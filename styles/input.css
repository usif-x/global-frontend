.input-group {
  position: relative;
  transition: all 0.4s ease;
  margin-bottom: 1.75rem;

  --input-accent-color: var(--color-sky);
  --input-label-focused-text: #ffffff;
  --input-focus-highlight-bg: rgba(255, 255, 255, 0.3);
  --dark-input-focus-highlight-bg: rgba(2, 28, 42, 0.3);
}

/* Color Themes */
.input-group[data-color="sky"]   { --input-accent-color: var(--color-sky); }
.input-group[data-color="red"]   { --input-accent-color: var(--color-red); }
.input-group[data-color="green"] { --input-accent-color: var(--color-green); }
.input-group[data-color="yellow"]{ --input-accent-color: var(--color-yellow); }

/* Error State Styles */
.input-group[data-error="true"] {
  --input-accent-color: var(--color-red);
}

/* Valid State Styles (when not focused and has value) */
.input-group[data-is-valid="true"]:not([data-focused="true"]) {
  --input-accent-color: var(--color-green);
}

.input-container {
  position: relative;
}

.modern-input {
  width: 100%;
  height: 3.5rem;
  background: transparent;
  border: none;
  border-bottom: 1px solid #e5e7eb;
  outline: none;
  transition: all 0.4s ease;
  font-size: 1rem;
}

/* RTL Layout */
.input-group.rtl .modern-input {
  padding: 0 3rem 0 1rem;
  text-align: right;
  direction: rtl;
}

.input-group.rtl .floating-label {
  right: 3rem;
  left: auto;
  text-align: right;
}

.input-group.rtl .input-icon {
  right: 1rem;
  left: auto;
}

.input-group.rtl .modern-input.is-focused ~ .floating-label,
.input-group.rtl .modern-input:not(:placeholder-shown) ~ .floating-label {
  right: 3rem;
  left: auto;
}

.input-group.rtl .modern-input.is-filled ~ .floating-label {
  right: 3rem;
  left: auto;
}

.input-group.rtl .focus-highlight,
.input-group.rtl .highlight-bar {
  transform-origin: right;
}

.input-group.rtl .modern-input.is-focused ~ .focus-highlight,
.input-group.rtl .modern-input.is-focused ~ .highlight-bar {
  animation: scaleInFromRight 0.3s ease-in-out forwards;
}

.input-group.rtl .modern-input:not(.is-focused) ~ .focus-highlight,
.input-group.rtl .modern-input:not(.is-focused) ~ .highlight-bar {
  animation: scaleOutToLeft 0.3s ease-in-out forwards;
}

/* LTR Layout */
.input-group.ltr .modern-input {
  padding: 0 1rem 0 3rem;
  text-align: left;
  direction: ltr;
}

.input-group.ltr .floating-label {
  left: 3rem;
  right: auto;
  text-align: left;
}

.input-group.ltr .input-icon {
  left: 1rem;
  right: auto;
}

.input-group.ltr .modern-input.is-focused ~ .floating-label,
.input-group.ltr .modern-input:not(:placeholder-shown) ~ .floating-label {
  left: 3rem;
  right: auto;
}

.input-group.ltr .modern-input.is-filled ~ .floating-label {
  left: 3rem;
  right: auto;
}

.input-group.ltr .focus-highlight,
.input-group.ltr .highlight-bar {
  transform-origin: left;
}

.input-group.ltr .modern-input.is-focused ~ .focus-highlight,
.input-group.ltr .modern-input.is-focused ~ .highlight-bar {
  animation: scaleInFromLeft 0.3s ease-in-out forwards;
}

.input-group.ltr .modern-input:not(.is-focused) ~ .focus-highlight,
.input-group.ltr .modern-input:not(.is-focused) ~ .highlight-bar {
  animation: scaleOutToRight 0.3s ease-in-out forwards;
}

/* Common Label Styles */
.floating-label {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  transition: all 0.4s ease;
  pointer-events: none;
  color: #9ca3af;
  font-size: 0.95rem;
  padding: 0 0.25rem;
  white-space: nowrap;
}

.input-icon {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  color: #9ca3af;
  transition: all 0.4s ease;
  z-index: 2;
}

/* Focused and Filled States */
.modern-input.is-focused ~ .floating-label,
.modern-input:not(:placeholder-shown) ~ .floating-label {
  top: 0;
  transform: translateY(-50%);
  font-size: 0.85rem;
  color: var(--input-label-focused-text);
  font-weight: 500;
  border-radius: 555px;
  z-index: 50;
  background-color: var(--input-accent-color);
  padding: 0.15rem 0.5rem;
}

.modern-input.is-focused ~ .input-icon,
.modern-input:not(:placeholder-shown) ~ .input-icon {
  color: var(--input-accent-color);
}

.modern-input:not(:placeholder-shown):not(.is-focused) ~ .floating-label {
  color: var(--input-accent-color);
  background-color: transparent;
}

.modern-input.is-filled ~ .floating-label {
  color: var(--input-accent-color);
  background-color: transparent;
  top: 0;
  transform: translateY(-50%);
  font-size: 0.85rem;
  font-weight: 500;
  border-radius: 555px;
  z-index: 50;
  padding: 0.15rem 0.5rem;
}

/* Focus effects */
.focus-highlight {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  transform: scaleX(0);
  border: solid 2px var(--input-accent-color);
  border-radius: 2px;
  pointer-events: none; /* âœ… THIS IS THE FIX. It allows clicks to pass through to the input. */
}
.highlight-bar {
  position: absolute;
  bottom: 0;
  left: 0;
  height: 2px;
  width: 100%;
  background: var(--input-accent-color);
  border-radius: 5px;
  transform: scaleX(0);
}

/* Animations */
@keyframes scaleInFromRight {
  0% { transform: scaleX(0); transform-origin: right; }
  100% { transform: scaleX(1); transform-origin: right; }
}
@keyframes scaleInFromLeft {
  0% { transform: scaleX(0); transform-origin: left; }
  100% { transform: scaleX(1); transform-origin: left; }
}
@keyframes scaleOutToRight {
  0% { transform: scaleX(1); transform-origin: right; }
  100% { transform: scaleX(0); transform-origin: right; }
}
@keyframes scaleOutToLeft {
  0% { transform: scaleX(1); transform-origin: left; }
  100% { transform: scaleX(0); transform-origin: left; }
}

/* Error Styles */
.input-error {
  border-bottom-color: var(--color-red) !important;
}

.input-error-shake {
  animation: shake 0.5s ease-in-out;
}

@keyframes shake {
  0%, 100% { transform: translateX(0); }
  25% { transform: translateX(-5px); }
  75% { transform: translateX(5px); }
}

.error-message {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  margin-top: 0.5rem;
  font-size: 0.875rem;
  color: var(--color-red);
  opacity: 0;
  transform: translateY(-10px);
  transition: all 0.3s ease;
}

.error-message.visible {
  opacity: 1;
  transform: translateY(0);
}

.error-icon {
  flex-shrink: 0;
}

/* RTL Error Message */
.input-group.rtl .error-message {
  flex-direction: row-reverse;
  text-align: right;
}

/* LTR Error Message */
.input-group.ltr .error-message {
  text-align: left;
}


.error-message {
  display: flex;
  align-items: center;
  color: theme('colors.red.500');
  font-size: 0.875rem;
  margin-top: 0.5rem;
  gap: 0.5rem;
}

.error-icon {
  color: theme('colors.red.500');
}
/* Error styles */
.error-message {
  color: #c32323;
  font-size: 0.85rem;
  transition: all 0.3s ease;
  display: flex;
  align-items: center;
  justify-content: flex-start; /* Changed from flex-end */
  border-radius: 5px;
  /* Removed border and background for a cleaner look */
  padding: 0.5rem 0; /* Adjusted padding */
  opacity: 0;
  max-height: 0;
  overflow: hidden;
  margin-top: 0.25rem; /* Reduced margin */
}

.error-message.visible {
  opacity: 1;
  max-height: 100px; /* Allow space for the message to appear */
  margin-top: 0.25rem;
  padding: 0.5rem 0;
}

.error-icon {
  margin-right: 0.5rem; /* Keep space between icon and text */
  margin-left: 0.25rem; /* Add some space on the left for RTL */
  color: #c32323;
}

.input-error {
  border-color: #ef4444 !important;
}

.modern-input.input-error ~ .input-icon {
  color: #ef4444;
}

/* Default error state */
.modern-input.input-error ~ .floating-label {
  color: #ef4444; /* Red */
}

/* When the input is focused and has error */
.modern-input.input-error:focus ~ .floating-label {
  color: #ffffff; /* White */
}


.modern-input.input-error ~ .highlight-bar {
  background: #ef4444;
}

.modern-input.input-error ~ .focus-highlight {
  border-color: #ef4444;
}

/* Error animation */
@keyframes shakeError {
  0%, 100% { transform: translateX(0); }
  25% { transform: translateX(-5px); }
  75% { transform: translateX(5px); }
}

.input-error-shake {
  animation: shakeError 0.4s ease;
}